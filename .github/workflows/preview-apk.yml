name: Preview APK (PR)

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  build-apk:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      EXPO_PUBLIC_API_BASE_URL: ${{ secrets.EXPO_PUBLIC_API_BASE_URL }}
      EXPO_PUBLIC_VERSION: ${{ secrets.EXPO_PUBLIC_VERSION }}

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4

      - name: üîß Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üîë Verify EAS auth (optional)
        run: npx --yes eas-cli@latest whoami || true

      - name: üß© Write .env
        run: |
          echo "EXPO_PUBLIC_API_BASE_URL=${EXPO_PUBLIC_API_BASE_URL}" >> .env
          echo "EXPO_PUBLIC_VERSION=${EXPO_PUBLIC_VERSION}" >> .env

      - name: üöÄ Start EAS build (no-wait)
        id: start
        run: |
          npx --yes eas-cli@latest build \
            --platform android \
            --profile preview \
            --non-interactive \
            --no-wait \
            --json > build.json

          echo "Raw build json:"
          cat build.json

          BUILD_ID=$(jq -r '.[0].id' build.json)
          WEB_URL=$(jq -r '.[0].webBuildUrl // .[0].buildDetailsPageUrl // empty' build.json)

          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_OUTPUT
          echo "WEB_URL=$WEB_URL"   >> $GITHUB_OUTPUT


      - name: ‚è≥ Wait for EAS build to finish
        timeout-minutes: 30
        run: |
          BUILD_ID="${{ steps.start.outputs.BUILD_ID }}"
          echo "Polling build $BUILD_ID ..."
          for i in $(seq 1 60); do  # 60 * 30s = 30 ph√∫t
            STATUS=$(npx --yes eas-cli@latest build:view --build-id "$BUILD_ID" --json | jq -r '.status')
            echo "[$(date -u +"%H:%M:%S")] status=$STATUS"
            if [ "$STATUS" = "finished" ]; then
              exit 0
            elif [ "$STATUS" = "errored" ] || [ "$STATUS" = "canceled" ]; then
              echo "Build failed with status=$STATUS"
              exit 1
            fi
            sleep 30
          done
          echo "Timed out waiting for build."
          exit 1


      - name: ‚¨áÔ∏è Download APK
        run: |
          npx --yes eas-cli@latest build:download \
            --build-id "${{ steps.start.outputs.BUILD_ID }}" \
            -o app-preview.apk

      - name: üì§ Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-preview
          path: app-preview.apk
          retention-days: 14


      - name: üí¨ Comment PR with build page
        if: ${{ steps.start.outputs.WEB_URL != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${{ toJson(steps.start.outputs.WEB_URL) }}`.replace(/^"|"$/g, "");
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const body = [
              "‚úÖ **APK build started** and will be attached here once finished.",
              "",
              `üîç EAS build page: ${url}`,
              `üì¶ CI run (artifacts after finish): ${runUrl}`
            ].join("\n");
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });
